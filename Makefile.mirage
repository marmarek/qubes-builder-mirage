# Makefile for mirage based package build
#
# For "API" documentation check Makefile.generic
#
# Variables used as "parameters":
#  DIST
#  SRC_DIR
#  COMPONENT

### Load component-specific settings

# Component specific settings. Generic variables:
#  SOURCE_PREP - make target to run at "prep" stage
#  SOURCE_BUILD_DEP - make target to run at "build-dep" stage
#  SOURCE_COPY_IN - make target to run after "copy-in" stage
#  SOURCE_COPY_OUT - make target to run after "copy-out" stage
# Above are mainly to extend Makefile with some component-specific actions
# (like handling additional sources)


PACKAGE_LIST = $(MIRAGE_KERNEL_NAME)
DIST_BUILD_DIR = /

OCAML_VERSION ?= system
# opam 1.2 expose only md5 checksum to fetch command
OPAMFETCH := $(MIRAGE_PLUGIN_DIR)/scripts/download-and-log %{url}% %{out}% md5 %{checksum}%

update-repo:
	cp $(BUILDER_REPO_DIR)/$(TEMPLATE_FLAVOR).xen $(UPDATE_REPO)/

dist-prep:
	@true

install-opam2:
	curl https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh -o $(CACHEDIR)/opam-install.sh
	sha256sum $(CACHEDIR)/opam-install.sh
	yes '' | sh $(CACHEDIR)/opam-install.sh

dist-prepare-chroot: $(shell command -v opam >/dev/null || echo install-opam2)
	opam init -y --bare
	opam update -y

opam-switch-%:
	exec 9>&2 && \
	export OPAMFETCH_LOG_FD=9 && \
	opam switch set $*-$(OCAML_VERSION) || \
	opam switch create $*-$(OCAML_VERSION) ocaml-base-compiler.$(OCAML_VERSION)

dist-build-dep: $(SOURCE_BUILD_DEP)
dist-build-dep: opam-switch-$(COMPONENT)
	exec 9>&2 && \
	export OPAMFETCH_LOG_FD=9 && \
	opam install -y mirage mirage-xen

dist-package:
	cd $(CHROOT_DIR)/$(DIST_SRC) && \
	eval "`opam config env`" && \
	exec 9>&2 && \
	export OPAMFETCH_LOG_FD=9 && \
	mirage configure -t xen && \
	make depends && \
	dune build

dist-copy-out:
	mkdir -p $(BUILDER_REPO_DIR)
	cp $(CHROOT_DIR)/$(DIST_SRC)/$(MIRAGE_KERNEL_NAME) $(BUILDER_REPO_DIR)/$(COMPONENT).xen
	-sha256sum $(BUILDER_REPO_DIR)/$(COMPONENT).xen
